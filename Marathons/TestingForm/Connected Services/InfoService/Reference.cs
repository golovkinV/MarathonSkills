//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestingForm.InfoService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RaceResult", Namespace="http://schemas.datacontract.org/2004/07/SerializationClasses")]
    [System.SerializableAttribute()]
    public partial class RaceResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string countryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string eventTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string genderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int marathonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double raceTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string runnerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string country {
            get {
                return this.countryField;
            }
            set {
                if ((object.ReferenceEquals(this.countryField, value) != true)) {
                    this.countryField = value;
                    this.RaisePropertyChanged("country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dateOfBirth {
            get {
                return this.dateOfBirthField;
            }
            set {
                if ((object.ReferenceEquals(this.dateOfBirthField, value) != true)) {
                    this.dateOfBirthField = value;
                    this.RaisePropertyChanged("dateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string eventTypeId {
            get {
                return this.eventTypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.eventTypeIdField, value) != true)) {
                    this.eventTypeIdField = value;
                    this.RaisePropertyChanged("eventTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gender {
            get {
                return this.genderField;
            }
            set {
                if ((object.ReferenceEquals(this.genderField, value) != true)) {
                    this.genderField = value;
                    this.RaisePropertyChanged("gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int marathonId {
            get {
                return this.marathonIdField;
            }
            set {
                if ((this.marathonIdField.Equals(value) != true)) {
                    this.marathonIdField = value;
                    this.RaisePropertyChanged("marathonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double raceTime {
            get {
                return this.raceTimeField;
            }
            set {
                if ((this.raceTimeField.Equals(value) != true)) {
                    this.raceTimeField = value;
                    this.RaisePropertyChanged("raceTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string runnerName {
            get {
                return this.runnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.runnerNameField, value) != true)) {
                    this.runnerNameField = value;
                    this.RaisePropertyChanged("runnerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Charity", Namespace="http://schemas.datacontract.org/2004/07/SerializationClasses")]
    [System.SerializableAttribute()]
    public partial class Charity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string logoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double totalAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string desc {
            get {
                return this.descField;
            }
            set {
                if ((object.ReferenceEquals(this.descField, value) != true)) {
                    this.descField = value;
                    this.RaisePropertyChanged("desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string logo {
            get {
                return this.logoField;
            }
            set {
                if ((object.ReferenceEquals(this.logoField, value) != true)) {
                    this.logoField = value;
                    this.RaisePropertyChanged("logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double totalAmount {
            get {
                return this.totalAmountField;
            }
            set {
                if ((this.totalAmountField.Equals(value) != true)) {
                    this.totalAmountField = value;
                    this.RaisePropertyChanged("totalAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Marathon", Namespace="http://schemas.datacontract.org/2004/07/SerializationClasses")]
    [System.SerializableAttribute()]
    public partial class Marathon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string countryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int yearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cityName {
            get {
                return this.cityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.cityNameField, value) != true)) {
                    this.cityNameField = value;
                    this.RaisePropertyChanged("cityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string country {
            get {
                return this.countryField;
            }
            set {
                if ((object.ReferenceEquals(this.countryField, value) != true)) {
                    this.countryField = value;
                    this.RaisePropertyChanged("country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int year {
            get {
                return this.yearField;
            }
            set {
                if ((this.yearField.Equals(value) != true)) {
                    this.yearField = value;
                    this.RaisePropertyChanged("year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventType", Namespace="http://schemas.datacontract.org/2004/07/SerializationClasses")]
    [System.SerializableAttribute()]
    public partial class EventType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InfoService.IInfoService")]
    public interface IInfoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoService/GetRaces", ReplyAction="http://tempuri.org/IInfoService/GetRacesResponse")]
        TestingForm.InfoService.RaceResult[] GetRaces();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoService/GetRaces", ReplyAction="http://tempuri.org/IInfoService/GetRacesResponse")]
        System.Threading.Tasks.Task<TestingForm.InfoService.RaceResult[]> GetRacesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoService/GetCharities", ReplyAction="http://tempuri.org/IInfoService/GetCharitiesResponse")]
        TestingForm.InfoService.Charity[] GetCharities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoService/GetCharities", ReplyAction="http://tempuri.org/IInfoService/GetCharitiesResponse")]
        System.Threading.Tasks.Task<TestingForm.InfoService.Charity[]> GetCharitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoService/GetMarathons", ReplyAction="http://tempuri.org/IInfoService/GetMarathonsResponse")]
        TestingForm.InfoService.Marathon[] GetMarathons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoService/GetMarathons", ReplyAction="http://tempuri.org/IInfoService/GetMarathonsResponse")]
        System.Threading.Tasks.Task<TestingForm.InfoService.Marathon[]> GetMarathonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoService/GetEventTypes", ReplyAction="http://tempuri.org/IInfoService/GetEventTypesResponse")]
        TestingForm.InfoService.EventType[] GetEventTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoService/GetEventTypes", ReplyAction="http://tempuri.org/IInfoService/GetEventTypesResponse")]
        System.Threading.Tasks.Task<TestingForm.InfoService.EventType[]> GetEventTypesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInfoServiceChannel : TestingForm.InfoService.IInfoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InfoServiceClient : System.ServiceModel.ClientBase<TestingForm.InfoService.IInfoService>, TestingForm.InfoService.IInfoService {
        
        public InfoServiceClient() {
        }
        
        public InfoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InfoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InfoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InfoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestingForm.InfoService.RaceResult[] GetRaces() {
            return base.Channel.GetRaces();
        }
        
        public System.Threading.Tasks.Task<TestingForm.InfoService.RaceResult[]> GetRacesAsync() {
            return base.Channel.GetRacesAsync();
        }
        
        public TestingForm.InfoService.Charity[] GetCharities() {
            return base.Channel.GetCharities();
        }
        
        public System.Threading.Tasks.Task<TestingForm.InfoService.Charity[]> GetCharitiesAsync() {
            return base.Channel.GetCharitiesAsync();
        }
        
        public TestingForm.InfoService.Marathon[] GetMarathons() {
            return base.Channel.GetMarathons();
        }
        
        public System.Threading.Tasks.Task<TestingForm.InfoService.Marathon[]> GetMarathonsAsync() {
            return base.Channel.GetMarathonsAsync();
        }
        
        public TestingForm.InfoService.EventType[] GetEventTypes() {
            return base.Channel.GetEventTypes();
        }
        
        public System.Threading.Tasks.Task<TestingForm.InfoService.EventType[]> GetEventTypesAsync() {
            return base.Channel.GetEventTypesAsync();
        }
    }
}
